// Copyright 2020 Prysmatic Labs.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package ethereum.eth.v1alpha1;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "eth/v1alpha1/attestation.proto";
import "eth/v1alpha1/beacon_block.proto";

option csharp_namespace = "Ethereum.Eth.v1alpha1";
option go_package = "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1;eth";
option java_multiple_files = true;
option java_outer_classname = "SSVProto";
option java_package = "org.ethereum.eth.v1alpha1";
option php_namespace = "Ethereum\\Eth\\v1alpha1";

// Shared-Secret-Validator(SSV) API
//
// This API enables the communication between a validator client and an SSV node
service SSV {
  rpc GetTaskStream(StreamRequest) returns (stream Task) {
    option (google.api.http) = {
      get: "/eth/v1alpha1/ssv/stream"
    };
  }
}

enum StreamTopics {
  SIGN_BLOCK = 0;
  CHECK_BLOCK = 1;
  SIGN_ATTESTATION = 2;
  CHECK_ATTESTATION = 3;
  SIGN_AGGREGATION = 4;
}

message StreamRequest {
  // A 48 byte validator public key.
  bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\""];
  repeated StreamTopics topics = 2;
}

message Task {
  StreamTopics topic = 1;
  oneof data {
      AttestationData attestation = 2;
      BeaconBlockHeader block = 3;
  }
}